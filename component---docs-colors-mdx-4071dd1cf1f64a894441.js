(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"x+U1":function(e,o,t){"use strict";t.r(o),t.d(o,"_frontmatter",(function(){return s})),t.d(o,"default",(function(){return d}));var r=t("Fcif"),n=t("+I+c"),l=t("/FXl"),c=t("TjRS"),a=t("TQX0"),b=t("DV2I"),s=(t("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/colors.mdx"}});var i={_frontmatter:s},p=c.a;function d(e){var o=e.components,t=Object(n.a)(e,["components"]);return Object(l.b)(p,Object(r.a)({},i,t,{components:o,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"colors"},"Colors"),Object(l.b)("h2",{id:"usage"},"Usage"),Object(l.b)("p",null,"We are using SCSS to set colors. There is a function (",Object(l.b)("inlineCode",{parentName:"p"},"palette"),") that extract the desired color. To use the function you need to import\n",Object(l.b)("inlineCode",{parentName:"p"},"_colors.scss")," and call ",Object(l.b)("inlineCode",{parentName:"p"},"palette")," function with the name of the color and the range."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"range can be omitted when range is 500 (default)")),Object(l.b)("p",null,"Same applies with font colors, in this case the function is called ",Object(l.b)("inlineCode",{parentName:"p"},"font-color")," and does not require a range."),Object(l.b)("h4",{id:"example"},"Example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-scss"}),"// ComponentName.module.scss\n\n@import '../../styles/colors';\n\n.selector {\n  background-color: palette(base, 700);\n  border-color: palette(alert);  // you can imit the range for default color (500)\n  \n  color: font-color(regular);  // range not required in font colors\n}\n")),Object(l.b)("h2",{id:"color-palettes"},"Color palettes"),Object(l.b)("div",{style:{display:"flex",justifyContent:"space-between",margin:"0 50px",flexWrap:"wrap"}},Object(l.b)(a.a,{color:"base",mdxType:"Colors"}),Object(l.b)(a.a,{color:"lowlight",mdxType:"Colors"}),Object(l.b)(a.a,{color:"feedback",mdxType:"Colors"}),Object(l.b)(a.a,{color:"highlight",mdxType:"Colors"}),Object(l.b)(a.a,{color:"success",mdxType:"Colors"}),Object(l.b)(a.a,{color:"alert",mdxType:"Colors"}),Object(l.b)(a.a,{color:"error",mdxType:"Colors"})),Object(l.b)("h2",{id:"font-colors"},"Font colors"),Object(l.b)(b.a,{color:"light",mdxType:"FontColor"}),Object(l.b)(b.a,{color:"highlight",mdxType:"FontColor"}),Object(l.b)(b.a,{color:"lowlight",mdxType:"FontColor"}),Object(l.b)(b.a,{color:"disabled",mdxType:"FontColor"}),Object(l.b)(b.a,{color:"regular",mdxType:"FontColor"}),Object(l.b)(b.a,{color:"grey",mdxType:"FontColor"}),Object(l.b)(b.a,{color:"dark",mdxType:"FontColor"}))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/colors.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-colors-mdx-4071dd1cf1f64a894441.js.map