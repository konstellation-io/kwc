{"version":3,"sources":["webpack:///../src/Button/Button.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","BUTTON_THEMES","BUTTON_ALIGN","Button","title","Component","label","onClick","alert","code","description","primary","border","theme","WARN","timeToEnable","__position","__code","__scope","Playground","Props","PropEnum","UseCaseInline","IconClose","DEFAULT","disabled","loading","height","align","MIDDLE","tabIndex","autoFocus","Icon","iconSize","to","isMDXComponent"],"mappings":"iTAWaA,G,UAAe,S,uMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,sGACA,8FAA6E,0BAAYC,WAAW,KAAvB,QAA7E,kBACA,iBAAQ,CACN,GAAM,0BADR,0BAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAUC,GAAI,CAACC,IAAeC,KAAeJ,QAAQ,aACrD,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOE,GAAIG,IAAQL,QAAQ,UAC3B,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAeM,MAAM,UAAUC,UAAW,YAAC,IAAD,CAAQC,MAAM,WAAWC,QAAS,kBAAMC,MAAM,YAAYV,QAAQ,WAAaW,KAAM,wBAAO,8BAAsCC,YAAY,4BAA4BZ,QAAQ,kBAC5N,YAAC,IAAD,CAAeM,MAAM,UAAUC,UAAW,YAAC,IAAD,CAAQC,MAAM,WAAWK,SAAO,EAACJ,QAAS,kBAAMC,MAAM,YAAYV,QAAQ,WAAaW,KAAM,wBAAO,uCAA+CX,QAAQ,kBACrM,YAAC,IAAD,CAAeM,MAAM,SAASC,UAAW,YAAC,IAAD,CAAQC,MAAM,WAAWM,QAAM,EAACL,QAAS,kBAAMC,MAAM,YAAYV,QAAQ,WAAaW,KAAM,wBAAO,sCAA8CX,QAAQ,kBAClM,YAAC,IAAD,CAAeM,MAAM,UAAUC,UAAW,YAAC,IAAD,CAAQC,MAAM,WAAWO,MAAOZ,IAAca,KAAMH,SAAO,EAACJ,QAAS,kBAAMC,MAAM,YAAYV,QAAQ,WAAaW,KAAM,wBAAO,kEAA0EX,QAAQ,kBAC3P,YAAC,IAAD,CAAeM,MAAM,kBAAkBC,UAAW,YAAC,IAAD,CAAQC,MAAM,WAAWS,aAAc,GAAIF,MAAOZ,IAAca,KAAMH,SAAO,EAACJ,QAAS,kBAAMC,MAAM,YAAYV,QAAQ,WAAaW,KAAM,wBAAO,oFAA4FC,YAAY,wDAAwDZ,QAAQ,kBAC3W,YAAC,IAAD,CAAeM,MAAM,mBAAmBC,UAAW,YAAC,IAAD,CAAQC,MAAM,WAAWO,MAAOZ,IAAca,KAAMF,QAAM,EAACL,QAAS,kBAAMC,MAAM,YAAYV,QAAQ,WAAaW,KAAM,wBAAO,iEAAyEX,QAAQ,kBAClQ,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYkB,WAAY,EAAGC,OAAQ,kVAA2VC,SAAO,GACnYrB,QACAH,kBACAyB,eACAC,UACAC,aACAC,kBACAC,cACApB,WACAF,kBACAC,kBAVmY,gBAWnYR,IAXmY,EAYnYH,eAZmY,GAalYO,QAAQ,cACb,YAAC,IAAD,CAAQQ,MAAM,WAAWO,MAAOZ,IAAcuB,QAASpB,MAAM,YAAYG,QAAS,kBAAMC,MAAM,YAAYG,SAAS,EAAMC,QAAQ,EAAOa,UAAU,EAAOC,SAAS,EAAOC,OAAQ,GAAIC,MAAO1B,IAAa2B,OAAQC,SAAU,EAAGC,WAAW,EAAOC,KAAMT,IAAWU,SAAS,aAAaC,GAAG,GAAGpC,QAAQ,kB,qMAMvSH,EAAWwC,gBAAiB","file":"component---src-button-button-mdx-8f46fc1c0a74109b152c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kwc/kwc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport PropEnum from '../docz-components/PropEnum/PropEnum';\nimport UseCaseInline from '../docz-components/UseCaseInline/UseCaseInline';\nimport IconClose from '@material-ui/icons/Close';\nimport { Button, BUTTON_THEMES, BUTTON_ALIGN } from './Button';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Button component allows the user to take actions or redirect to another view.`}</p>\n    <p>{`When a button is used as a link it will be automatically wrapped in a `}<inlineCode parentName=\"p\">{`link`}</inlineCode>{` HTML element.`}</p>\n    <h2 {...{\n      \"id\": \"props-and-enumerations\"\n    }}>{`Props and enumerations`}</h2>\n    <h4 {...{\n      \"id\": \"enums\"\n    }}>{`Enums`}</h4>\n    <PropEnum of={[BUTTON_THEMES, BUTTON_ALIGN]} mdxType=\"PropEnum\" />\n    <h4 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h4>\n    <Props of={Button} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"use-cases\"\n    }}>{`Use Cases`}</h2>\n    <UseCaseInline title=\"Default\" Component={<Button label=\"CLICK ME\" onClick={() => alert('clicked')} mdxType=\"Button\" />} code={<code>{'<Button label=\"CLICK ME\"/>'}</code>} description=\"Links use `default` style\" mdxType=\"UseCaseInline\" />\n    <UseCaseInline title=\"Primary\" Component={<Button label=\"CLICK ME\" primary onClick={() => alert('clicked')} mdxType=\"Button\" />} code={<code>{'<Button label=\"CLICK ME\" primary />'}</code>} mdxType=\"UseCaseInline\" />\n    <UseCaseInline title=\"Border\" Component={<Button label=\"CLICK ME\" border onClick={() => alert('clicked')} mdxType=\"Button\" />} code={<code>{'<Button label=\"CLICK ME\" border />'}</code>} mdxType=\"UseCaseInline\" />\n    <UseCaseInline title=\"Warning\" Component={<Button label=\"CLICK ME\" theme={BUTTON_THEMES.WARN} primary onClick={() => alert('clicked')} mdxType=\"Button\" />} code={<code>{'<Button label=\"CLICK ME\" theme={BUTTON_THEMES.WARN} primary />'}</code>} mdxType=\"UseCaseInline\" />\n    <UseCaseInline title=\"Warning (timer)\" Component={<Button label=\"CLICK ME\" timeToEnable={99} theme={BUTTON_THEMES.WARN} primary onClick={() => alert('clicked')} mdxType=\"Button\" />} code={<code>{'<Button label=\"CLICK ME\" theme={BUTTON_THEMES.WARN} timeToEnable={99} primary />'}</code>} description=\"Use this to force users to read important information\" mdxType=\"UseCaseInline\" />\n    <UseCaseInline title=\"Warning (border)\" Component={<Button label=\"CLICK ME\" theme={BUTTON_THEMES.WARN} border onClick={() => alert('clicked')} mdxType=\"Button\" />} code={<code>{'<Button label=\"CLICK ME\" theme={BUTTON_THEMES.WARN} border />'}</code>} mdxType=\"UseCaseInline\" />\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={8} __code={'<Button\\n  label=\\\"CLICK ME\\\"\\n  theme={BUTTON_THEMES.DEFAULT}\\n  title=\\\"Some text\\\"\\n  onClick={() => alert(\\'clicked\\')}\\n  primary={true}\\n  border={false}\\n  disabled={false}\\n  loading={false}\\n  height={30}\\n  align={BUTTON_ALIGN.MIDDLE}\\n  tabIndex={0}\\n  autofocus={false}\\n  Icon={IconClose}\\n  iconSize=\\\"icon-small\\\"\\n  to=\\\"\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      PropEnum,\n      UseCaseInline,\n      IconClose,\n      Button,\n      BUTTON_THEMES,\n      BUTTON_ALIGN,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Button label=\"CLICK ME\" theme={BUTTON_THEMES.DEFAULT} title=\"Some text\" onClick={() => alert('clicked')} primary={true} border={false} disabled={false} loading={false} height={30} align={BUTTON_ALIGN.MIDDLE} tabIndex={0} autoFocus={false} Icon={IconClose} iconSize=\"icon-small\" to=\"\" mdxType=\"Button\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}