{"version":3,"sources":["webpack:///../src/docs/components/ExpandableMenu.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","ExpandableMenuPropsComponent","parentName","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,wNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,8LAEA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAA8BF,QAAQ,UACjD,iBAAQ,CACN,GAAM,UADR,UAGA,YAAC,IAAD,CAAuBA,QAAQ,0BAC/B,iBAAQ,CACN,GAAM,SADR,SAGA,iKAEA,uBAAK,gCAAMG,WAAW,OAAU,CAC5B,UAAa,iBADZ,+Y,sNAsBTN,EAAWO,gBAAiB","file":"component---src-docs-components-expandable-menu-mdx-b874839cd16d1ef362c8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kwc/kwc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Props } from 'docz';\nimport { ExpandableMenu } from 'kwc';\nimport { ExpandableMenuPropsComponent } from './MDXComponents.tsx';\nimport ExpandableMenuExample from './examples/ExpandableMenuExample';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"expandablemenu\"\n    }}>{`ExpandableMenu`}</h1>\n    <p>{`ExpandableMenu component shows/hides the components located within it with an open/close animation. When the\ncomponent is not opened, its children are not rendered.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={ExpandableMenuPropsComponent} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"sample\"\n    }}>{`Sample`}</h2>\n    <ExpandableMenuExample mdxType=\"ExpandableMenuExample\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`This component is used for things like selectors, there is a button than opens a list and the list is closed when\nyou click outside it.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`function Component() {\n  const [opened, setOpened] = useState(false);\n\n  const openComponent = () => setOpened(true);\n  const closeComponent = () => setOpened(false);\n\n  return (\n    <div>\n      <div onClick={openComponent}>OPEN!</div>\n      <ExpandableMenu opened={opened} close={closeComponent}>\n        <div>Some children</div>\n      </ExpandableMenu>\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}