{"version":3,"sources":["webpack:///../src/docs/components/Spinners.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","SpinnerCircularPropsComponent","parentName","title","Component","style","position","width","size","code","description","__position","__code","__scope","Playground","Props","UseCaseInline","SpinnerCircular","SpinnerLinear","isMDXComponent"],"mappings":"4RAUaA,G,UAAe,S,kNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,yJAEA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAA+BF,QAAQ,UAClD,iBAAQ,CACN,GAAM,SADR,SAGA,4JAEA,uBAAK,gCAAMG,WAAW,OAAU,CAC5B,UAAa,iBADZ,oMAWL,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAeC,MAAM,kBAAkBC,UAAW,mBAAKC,MAAO,CAC5DC,SAAU,WACVC,MAAO,SAEP,YAAC,kBAAD,CAAiBC,KAAM,GAAIT,QAAQ,qBAC7BU,KAAM,wBAAO,iCAAyCC,YAAY,GAAGX,QAAQ,kBACrF,YAAC,IAAD,CAAeI,MAAM,gBAAgBC,UAAW,mBAAKC,MAAO,CAC1DC,SAAU,WACVC,MAAO,SAEP,YAAC,gBAAD,CAAeC,KAAM,GAAIT,QAAQ,mBAC3BU,KAAM,wBAAO,+BAAuCC,YAAY,GAAGX,QAAQ,kBACnF,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYY,WAAY,EAAGC,OAAQ,8BAA+BC,SAAO,GACvEf,QACAH,kBACAmB,eACAC,UACAC,kBACAC,kCACAC,8BACAjB,mCARuE,gBASvEN,IATuE,EAUvEH,eAVuE,GAWtEO,QAAQ,cACb,YAAC,gBAAD,CAAeS,KAAM,GAAIT,QAAQ,yB,gNAMnCH,EAAWuB,gBAAiB","file":"component---src-docs-components-spinners-mdx-95da5050655751713577.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kwc/kwc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport UseCaseInline from '../../docz-components/UseCaseInline/UseCaseInline';\nimport { SpinnerCircular, SpinnerLinear } from 'kwc';\nimport { SpinnerCircularPropsComponent } from './MDXComponents.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"spinners\"\n    }}>{`Spinners`}</h1>\n    <p>{`Spinner components allow the user to know that something is happening on the background and cannot be shown\nwhile is not ready.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={SpinnerCircularPropsComponent} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`This component typically block the render of the content that is not ready, to do that this components has\nto be returned earlier.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`function Component() {\n  const { data, loading } = useQuery(QUERY);\n\n  // Interrupt the render process by returning this component\n  if (loading) return <SpinnerCircular />;\n\n  ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"use-cases\"\n    }}>{`Use Cases`}</h2>\n    <UseCaseInline title=\"SpinnerCircular\" Component={<div style={{\n      position: 'relative',\n      width: '40px'\n    }}>\n      <SpinnerCircular size={60} mdxType=\"SpinnerCircular\" />\n    </div>} code={<code>{'<SpinnerCircular size={60} />'}</code>} description=\"\" mdxType=\"UseCaseInline\" />\n    <UseCaseInline title=\"SpinnerLinear\" Component={<div style={{\n      position: 'relative',\n      width: '40px'\n    }}>\n      <SpinnerLinear size={60} mdxType=\"SpinnerLinear\" />\n    </div>} code={<code>{'<SpinnerLinear size={60} />'}</code>} description=\"\" mdxType=\"UseCaseInline\" />\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={2} __code={'<SpinnerLinear size={60} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      UseCaseInline,\n      SpinnerCircular,\n      SpinnerLinear,\n      SpinnerCircularPropsComponent,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <SpinnerLinear size={60} mdxType=\"SpinnerLinear\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}