{"version":3,"sources":["webpack:///../src/docs/form/ExpandableTextInput.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","ExpandableTextInputPropsComponent","title","Component","code","description","__position","__code","__scope","Playground","Props","UseCaseInline","PropEnum","ExpandableTextInput","onEnterKeyPress","alert","onChange","onBlur","formValue","isMDXComponent"],"mappings":"0SAWaA,G,UAAe,S,uNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,aADR,aAGA,uDAAsC,0BAAYC,WAAW,KAAvB,QAAtC,mEACA,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAmCH,QAAQ,UACtD,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAeI,MAAM,UAAUC,UAAW,YAAC,sBAAD,CAAqBL,QAAQ,wBAA0BM,KAAM,wBAAO,2BAAmCC,YAAY,GAAGP,QAAQ,kBACxK,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAYQ,WAAY,EAAGC,OAAQ,6KAAoLC,SAAO,GAC5NX,QACAH,kBACAe,eACAC,UACAC,kBACAC,aACAC,0CACAZ,uCAR4N,gBAS5NP,IAT4N,EAU5NH,eAV4N,GAW3NO,QAAQ,cACb,YAAC,sBAAD,CAAqBgB,gBAAiB,kBAAMC,MAAM,kBAAkBC,SAAU,kBAAMD,MAAM,YAAYE,OAAQ,kBAAMF,MAAM,SAASG,UAAU,YAAYpB,QAAQ,+B,qNAMnKH,EAAWwB,gBAAiB","file":"component---src-docs-form-expandable-text-input-mdx-63ce768fe6e90d506554.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kwc/kwc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport UseCaseInline from '../../docz-components/UseCaseInline/UseCaseInline';\nimport PropEnum from '../../docz-components/PropEnum/PropEnum.tsx';\nimport { ExpandableTextInput } from 'kwc';\nimport { ExpandableTextInputPropsComponent } from './MDXComponents.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"textinput\"\n    }}>{`TextInput`}</h1>\n    <p>{`ExpandableTextInput implements `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{` HTML input element in a collapsable way. Used as a search bar.`}</p>\n    <h2 {...{\n      \"id\": \"props-and-enums\"\n    }}>{`Props and enums`}</h2>\n    <h3 {...{\n      \"id\": \"props\"\n    }}>{`props`}</h3>\n    <Props of={ExpandableTextInputPropsComponent} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"use-cases\"\n    }}>{`Use Cases`}</h2>\n    <UseCaseInline title=\"Default\" Component={<ExpandableTextInput mdxType=\"ExpandableTextInput\" />} code={<code>{'<ExpandableTextInput />'}</code>} description=\"\" mdxType=\"UseCaseInline\" />\n    <h2 {...{\n      \"id\": \"playground\"\n    }}>{`Playground`}</h2>\n    <Playground __position={2} __code={'<ExpandableTextInput\\n  onEnterKeyPress={() => alert(\\'Enter pressed\\')}\\n  onChange={() => alert(\\'Changed\\')}\\n  onBlur={() => alert(\\'Blur\\')}\\n  formValue=\\\"some text\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      UseCaseInline,\n      PropEnum,\n      ExpandableTextInput,\n      ExpandableTextInputPropsComponent,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ExpandableTextInput onEnterKeyPress={() => alert('Enter pressed')} onChange={() => alert('Changed')} onBlur={() => alert('Blur')} formValue=\"some text\" mdxType=\"ExpandableTextInput\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}