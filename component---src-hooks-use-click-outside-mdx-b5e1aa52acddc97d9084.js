(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{"2iCf":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return s})),t.d(n,"default",(function(){return b}));var i=t("Fcif"),o=t("+I+c"),a=t("/FXl"),c=t("TjRS"),s=(t("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/useClickOutside.mdx"}});var l={_frontmatter:s},u=c.a;function b(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)(u,Object(i.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"useclickoutside"},"useClickOutside"),Object(a.b)("p",null,"useClickOutside hook allows an action to be performed after clicking outside a component."),Object(a.b)("h2",{id:"params"},"Params"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"componentRef"),": React ref object"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"action"),": Function"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"mousedown"),": boolean | undefined (optional)")),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,"This hook is used to close some elements after clicking outside its content (but can be used to\nperform other actions)."),Object(a.b)("p",null,"With ",Object(a.b)("inlineCode",{parentName:"p"},"addClickOutsideEvents")," and ",Object(a.b)("inlineCode",{parentName:"p"},"removeClickOutsideEvents")," you can minimize the amount of\nevent listeners used in the application by only adding listeners when you are actually waiting the\nuser to click outside."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"You can send a third param as true of you want to list to ",Object(a.b)("inlineCode",{parentName:"p"},"mousedown")," events instead of only ",Object(a.b)("inlineCode",{parentName:"p"},"click")," events.")),Object(a.b)("pre",null,Object(a.b)("code",Object(i.a)({parentName:"pre"},{className:"language-tsx"}),"function Component() {\n  const componentRef = useRef(null);\n  const [visible, setVisible] = useState(false);\n  const {\n    addClickOutsideEvents,\n    removeClickOutsideEvents\n  } = useClickOutside(componentRef, hideComponent);\n\n  function showComponent() {\n    addClickOutsideEvents();\n    setVisible(true);\n  };\n  function hideComponent() {\n    removeClickOutsideEvents();\n    setVisible(false);\n  };\n\n  return (\n    <div>\n      <div onClick={showComponent}>SHOW!</div>\n      {visible && <div ref={componentRef}>{children}</div>}\n    </div>\n  );\n}\n")))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/useClickOutside.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-use-click-outside-mdx-b5e1aa52acddc97d9084.js.map