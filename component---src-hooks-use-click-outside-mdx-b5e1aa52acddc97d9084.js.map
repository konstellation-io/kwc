{"version":3,"sources":["webpack:///../src/hooks/useClickOutside.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8OAOaA,G,UAAe,S,+MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,kHACA,iBAAQ,CACN,GAAM,UADR,UAGA,sBACE,kBAAIC,WAAW,MAAK,sBAAQA,WAAW,MAAnB,gBAApB,sBACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,UAApB,cACA,kBAAIA,WAAW,MAAK,sBAAQA,WAAW,MAAnB,aAApB,qCAEF,iBAAQ,CACN,GAAM,SADR,SAGA,iJAEA,6BAAY,0BAAYA,WAAW,KAAvB,yBAAZ,QAAsF,0BAAYA,WAAW,KAAvB,4BAAtF,+JAGA,8BACE,iBAAGA,WAAW,cAAd,6DAAyF,0BAAYA,WAAW,KAAvB,aAAzF,2BAA0K,0BAAYA,WAAW,KAAvB,SAA1K,aAEF,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wkB,6MA+BTJ,EAAWK,gBAAiB","file":"component---src-hooks-use-click-outside-mdx-b5e1aa52acddc97d9084.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kwc/kwc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport useClickOutside from './useClickOutside';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useclickoutside\"\n    }}>{`useClickOutside`}</h1>\n    <p>{`useClickOutside hook allows an action to be performed after clicking outside a component.`}</p>\n    <h2 {...{\n      \"id\": \"params\"\n    }}>{`Params`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`componentRef`}</strong>{`: React ref object`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`action`}</strong>{`: Function`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`mousedown`}</strong>{`: boolean | undefined (optional)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`This hook is used to close some elements after clicking outside its content (but can be used to\nperform other actions).`}</p>\n    <p>{`With `}<inlineCode parentName=\"p\">{`addClickOutsideEvents`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`removeClickOutsideEvents`}</inlineCode>{` you can minimize the amount of\nevent listeners used in the application by only adding listeners when you are actually waiting the\nuser to click outside.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can send a third param as true of you want to list to `}<inlineCode parentName=\"p\">{`mousedown`}</inlineCode>{` events instead of only `}<inlineCode parentName=\"p\">{`click`}</inlineCode>{` events.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-tsx\"\n      }}>{`function Component() {\n  const componentRef = useRef(null);\n  const [visible, setVisible] = useState(false);\n  const {\n    addClickOutsideEvents,\n    removeClickOutsideEvents\n  } = useClickOutside(componentRef, hideComponent);\n\n  function showComponent() {\n    addClickOutsideEvents();\n    setVisible(true);\n  };\n  function hideComponent() {\n    removeClickOutsideEvents();\n    setVisible(false);\n  };\n\n  return (\n    <div>\n      <div onClick={showComponent}>SHOW!</div>\n      {visible && <div ref={componentRef}>{children}</div>}\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}